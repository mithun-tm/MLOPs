make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Tue Jul  5 21:29:30 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 11)
PYTHON_INTERPRETER = python3
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 7)
PROJECT_DIR := /Users/mithun.tm/IISc DA212/Assignments/PSET2/MLOPs
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/mithun.tm/IISc/MLOPs DA212/Assignments/PSET2/MLOPs
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/z2/xrkppxm93x74pcyf4vy38krxyygc7d/T/vscode-ipc-6cedf14d-d525-4403-9582-9ce664cd33fa.sock
# environment
VSCODE_CWD = /
# makefile (from `Makefile', line 8)
BUCKET = [OPTIONAL] your-bucket-for-syncing-data (do not include 's3://')
# environment
PATH = /usr/bin:/bin:/usr/sbin:/sbin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.T9oiB9NX2b/Listeners
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/mithun.tm/IISc/MLOPs DA212/Assignments/PSET2/MLOPs
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/mithun.tm
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/mithun.tm/Library/Application Support/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = mithun.tm
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = mithun.tm
# makefile (from `Makefile', line 89)
.DEFAULT_GOAL := help
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/z2/xrkppxm93x74pcyf4vy38krxyygc7d/T/
# makefile (from `Makefile', line 9)
PROFILE = default
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/mithun.tm/Library/Application Support/Code/1.68.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.306320627.306320633
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x7DE7B0ED:0:2
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# makefile (from `Makefile', line 14)
HAS_CONDA = False
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 10)
PROJECT_NAME = MLOPs
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 830
# variable set hash-table stats:
# Load=68/1024=7%, Rehash=0, Collisions=1/101=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777220, inode 318394145): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

data: requirements
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 30):
	$(PYTHON_INTERPRETER) src/data/make_dataset.py data/raw data/processed
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: clean data lint requirements sync_data_to_s3 sync_data_from_s3 help
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-05 21:28:36
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	@echo "$$(tput bold)Available rules:$$(tput sgr0)"
	@echo
	@sed -n -e "/^## / { \
	h; \
	s/.*//; \
	:doc" \
	-e "H; \
	n; \
	s/^## //; \
	t doc" \
	-e "s/:.*//; \
	G; \
	s/\\n## /---/; \
	s/\\n/ /g; \
	p; \
	}" ${MAKEFILE_LIST} \
	| LC_ALL='C' sort --ignore-case \
	| awk -F '---' \
	-v ncol=$$(tput cols) \
	-v indent=19 \
	-v col_on="$$(tput setaf 6)" \
	-v col_off="$$(tput sgr0)" \
	'{ \
	printf "%s%*s%s ", col_on, -indent, $$1, col_off; \
	n = split($$2, words, " "); \
	line_length = ncol - indent; \
	for (i = 1; i <= n; i++) { \
	line_length -= length(words[i]) + 1; \
	if (line_length <= 0) { \
	line_length = ncol - indent - length(words[i]) - 1; \
	printf "\n%*s ", -indent, " "; \
	} \
	printf "%s ", words[i]; \
	} \
	printf "\n"; \
	}' \
	| more $(shell test $(shell uname) = Darwin && echo '--no-init --raw-control-chars')
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 34):
	find . -type f -name "*.py[co]" -delete
	find . -type d -name "__pycache__" -delete
	

test_environment:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 77):
	$(PYTHON_INTERPRETER) test_environment.py
	

create_environment:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 68):
	$(PYTHON_INTERPRETER) -m pip install -q virtualenv virtualenvwrapper
	@echo ">>> Installing virtualenvwrapper if not already installed.\nMake sure the following lines are in shell startup file\n\
	export WORKON_HOME=$$HOME/.virtualenvs\nexport PROJECT_HOME=$$HOME/Devel\nsource /usr/local/bin/virtualenvwrapper.sh\n"
	@bash -c "source `which virtualenvwrapper.sh`;mkvirtualenv $(PROJECT_NAME) --python=$(PYTHON_INTERPRETER)"
	@echo ">>> New virtualenv created. Activate with:\nworkon $(PROJECT_NAME)"
	

sync_data_from_s3:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 52):
	aws s3 sync s3://$(BUCKET)/data/ data/
	

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 39):
	flake8 src
	

requirements: test_environment
 
make: *** No rule to make target `all'.  Stop.

#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 25):
	$(PYTHON_INTERPRETER) -m pip install -U pip setuptools wheel
	$(PYTHON_INTERPRETER) -m pip install -r requirements.txt
	

sync_data_to_s3:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 44):
	aws s3 sync data/ s3://$(BUCKET)/data/
	

# files hash-table stats:
# Load=14/1024=1%, Rehash=0, Collisions=0/36=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Tue Jul  5 21:29:30 2022

 
